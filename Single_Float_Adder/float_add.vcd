$date
	Tue Nov 28 23:04:16 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Float_Add_tb $end
$var wire 1 ! valid $end
$var wire 32 " sum [31:0] $end
$var reg 32 # X [31:0] $end
$var reg 32 $ Y [31:0] $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$var reg 1 ' start $end
$scope module inst $end
$var wire 32 ( X [31:0] $end
$var wire 32 ) Y [31:0] $end
$var wire 1 * add_carry $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 1 + sub_borrow $end
$var wire 32 , sum [31:0] $end
$var parameter 2 - IDLE $end
$var parameter 2 . SHIFT_MANT $end
$var parameter 2 / START $end
$var reg 8 0 X_exp [7:0] $end
$var reg 24 1 X_mant [23:0] $end
$var reg 24 2 X_mantissa [23:0] $end
$var reg 1 3 X_sign $end
$var reg 8 4 Y_exp [7:0] $end
$var reg 24 5 Y_mant [23:0] $end
$var reg 24 6 Y_mantissa [23:0] $end
$var reg 1 7 Y_sign $end
$var reg 9 8 abs_diff [8:0] $end
$var reg 9 9 expsub [8:0] $end
$var reg 2 : next_state [1:0] $end
$var reg 8 ; next_sum_exp [7:0] $end
$var reg 25 < next_sum_mantissa [24:0] $end
$var reg 1 = next_sum_sign $end
$var reg 1 > next_valid $end
$var reg 2 ? pres_state [1:0] $end
$var reg 8 @ sum_exp [7:0] $end
$var reg 25 A sum_mantissa [24:0] $end
$var reg 25 B sum_mantissa_temp [24:0] $end
$var reg 1 C sum_sign $end
$var reg 1 ! valid $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 /
b10 .
b0 -
$end
#0
$dumpvars
0C
b0 B
b0 A
b0 @
b0 ?
0>
0=
b0 <
b0 ;
b0 :
bx 9
bx 8
17
bx 6
b110110000000000000000000 5
b10000001 4
03
bx 2
b111100000000000000000000 1
b10000000 0
b0 ,
0+
0*
b11000000110110000000000000000000 )
b1000000011100000000000000000000 (
0'
0&
1%
b11000000110110000000000000000000 $
b1000000011100000000000000000000 #
b0 "
0!
$end
#5000
0%
#10000
1%
1&
#15000
0%
#20000
1=
1+
b11000000000000000000000 <
b1101000000000000000000000 B
b10000001 ;
b110110000000000000000000 6
b11110000000000000000000 2
b1 8
b111111111 9
b1 ?
b10 :
1%
1'
#25000
0%
#30000
0+
1C
b11000000000000000000000 A
b11000000111000000000000000000000 "
b11000000111000000000000000000000 ,
b10000001 @
b10 ?
b0 B
b10 :
b110000000000000000000000 <
b10000000 ;
1=
1%
0'
#35000
0%
#40000
1>
b0 :
b110000000000000000000000 <
b10000000 ;
b110000000000000000000000 A
b11000000010000000000000000000000 "
b11000000010000000000000000000000 ,
b10000000 @
1%
#45000
0%
#50000
0=
b0 <
b0 ;
0>
b0 ?
1!
1%
#55000
0%
#60000
b111101101111000110101010 <
b111101101111000110101010 B
b10000010 ;
b101001110011001100110011 6
b10011111011111001110111 2
b111111101 9
0C
b0 A
b0 "
b0 ,
b0 @
b1 ?
0!
b10 :
0=
b101001110011001100110011 5
b10000010 4
07
b100111110111110011101110 1
b1111111 0
1%
1'
b1000001001001110011001100110011 $
b1000001001001110011001100110011 )
b111111100111110111110011101110 #
b111111100111110111110011101110 (
#65000
0%
#70000
1>
b111101101111000110101010 A
b1000001011101101111000110101010 "
b1000001011101101111000110101010 ,
b10000010 @
b10 ?
b0 B
b0 :
b111101101111000110101010 <
b10000010 ;
1%
0'
#75000
0%
#80000
b0 <
b0 ;
0>
b0 ?
1!
1%
#85000
0%
#90000
b0 A
b0 "
b0 ,
b0 @
0!
1%
#95000
0%
#100000
1%
#105000
0%
#110000
1%
#115000
0%
#120000
1%
#125000
0%
#130000
1%
#135000
0%
#140000
1%
#145000
0%
#150000
1%
#155000
0%
#160000
1%
#165000
0%
#170000
1%
#175000
0%
#180000
1%
#185000
0%
#190000
1%
#195000
0%
#200000
1%
